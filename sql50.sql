-- My solutions for the sql 50 study plan on leetcode

-- 1683. Invalid Tweets
SELECT TWEET_ID 
FROM TWEETS 
WHERE LENGTH(CONTENT) > 15


-- 1068 
# Write your MySQL query statement below
SELECT P.PRODUCT_NAME AS PRODUCT_NAME, S.YEAR AS YEAR, S.PRICE AS PRICE
FROM PRODUCT AS P 
JOIN SALES AS S ON
P.PRODUCT_ID = S.PRODUCT_ID


-- 570
# Write your MySQL query statement below
SELECT NAME FROM EMPLOYEE
WHERE ID IN (SELECT MANAGERID FROM EMPLOYEE GROUP BY MANAGERID HAVING COUNT(ID) > 4)


-- 1934
# Write your MySQL query statement below
SELECT S.USER_ID,
ROUND(COALESCE(SUM(CASE WHEN C.ACTION LIKE "CONFIRMED" THEN 1 ELSE 0 END) / NULLIF(COUNT(C.USER_ID), 0), 0), 2) AS CONFIRMATION_RATE
FROM SIGNUPS AS S
LEFT JOIN CONFIRMATIONS AS C
ON S.USER_ID = C.USER_ID
GROUP BY S.USER_ID;


-- 1729
# Write your MySQL query statement below
SELECT USER_ID, COUNT(FOLLOWER_ID) AS FOLLOWERS_COUNT
FROM FOLLOWERS
GROUP BY USER_ID
ORDER BY USER_ID;



-- 176
-- # Write your MySQL query statement below
-- WITH RANKED_SAL AS (
--     SELECT ID, SALARY,
--     ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS RN
--     FROM EMPLOYEE
-- )

-- SELECT (CASE WHEN RN = 2 THEN SALARY ELSE NULL END)
-- AS SECONDHIGHESTSALARY 
-- FROM RANKED_SAL
-- WHERE RN = 2;

SELECT (
    SELECT DISTINCT SALARY 
    FROM EMPLOYEE
    ORDER BY SALARY DESC
    LIMIT 1 OFFSET 1
) AS SECONDHIGHESTSALARY



-- 585
# Write your MySQL query statement below
SELECT ROUND(SUM(TIV_2016), 2)
AS TIV_2016
FROM INSURANCE 
WHERE TIV_2015 IN (
    SELECT TIV_2015 
    FROM INSURANCE 
    GROUP BY TIV_2015
    HAVING COUNT(*) > 1
)
AND (LAT, LON) IN (
    SELECT LAT, LON 
    FROM INSURANCE 
    GROUP BY LAT, LON 
    HAVING COUNT(*) = 1
)

-- SELECT *
-- FROM INSURANCE AS I1
-- JOIN INSURANCE AS I2 
-- ON I1.TIV_2015 = I2.TIV_2015
-- AND I1.LAT != I2.LAT 
-- AND I1.LON != I2.LON
-- AND I1.PID != I2.PID;

-- SUM(I1.TIV_2016) AS TIV_2016



-- 602
# Write your MySQL query statement below
SELECT ID,
COUNT(*) AS NUM 
FROM 
(
    SELECT REQUESTER_ID AS ID FROM REQUESTACCEPTED
    UNION ALL 
    SELECT ACCEPTER_ID AS ID FROM REQUESTACCEPTED
) AS COMBINED_ID
GROUP BY ID
ORDER BY NUM DESC 
LIMIT 1



-- 1321
# Write your MySQL query statement below
WITH DAILY_TOTALS AS (
    SELECT SUM(AMOUNT) AS DAILY_AMOUNT,
    VISITED_ON
    FROM CUSTOMER
    GROUP BY VISITED_ON
),

MOVING AS (
    SELECT 
    VISITED_ON,
    SUM(DAILY_AMOUNT) OVER (
        ORDER BY VISITED_ON 
        ROWS BETWEEN 6 PRECEDING AND CURRENT ROW
    ) AS ROLLING_7,
    COUNT(*) OVER (
        ORDER BY VISITED_ON 
        ROWS BETWEEN 6 PRECEDING AND CURRENT ROW
    ) AS DAYS_IN_WINDOW
    FROM DAILY_TOTALS
)

SELECT 
VISITED_ON,
ROLLING_7 AS AMOUNT,
ROUND((ROLLING_7 / DAYS_IN_WINDOW), 2) AS AVERAGE_AMOUNT
FROM MOVING
WHERE DAYS_IN_WINDOW = 7
ORDER BY VISITED_ON


-- 626
# Write your MySQL query statement below
SELECT (
    CASE 
    WHEN (ID % 2 != 0) AND ID = (SELECT MAX(ID) FROM SEAT) THEN ID
    WHEN (ID % 2 != 0) THEN ID + 1 ELSE ID - 1
    END
) AS ID,
STUDENT 
FROM SEAT
ORDER BY ID



